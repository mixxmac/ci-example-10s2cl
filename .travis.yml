language: php
php:
- 5.3

env:
  global:
  # Site information for fresh install (drops7 upstream)
  - PNAME='10stepstest'
  - PUUID=(`drush psite-uuid $PNAME | cut -f2 -d' '`)
  # Site information for upgrade testing (10s2cl-drops7 upstream)
  - PSOURCE='dev'
  - PNAME2='10steps'
  - PUUID2=(`drush psite-uuid $PNAME2 | cut -f2 -d' '`)
  # Encrypted email and password for terminus to authenticate into Pantheon
  - secure: "E4Xtuee9bZ9iqFKPyTR3hA5dE/su7iz9sW1Qb2B6Al+Wh9EDoC9IJlF/g6MypVvduAKeSoIf9Judnnr1xt/E324OxYKCRFBAWpfFn8pnNchO2kFacwCX54q2ZnHxdg1Mhpcw1dUo61+7FvrKK6q9sg4LVZ+CzxuPi6p/3Ly/Fgc="
  - secure: "B36n51LDAYS/aPukaz9nnQAiOQLKb95aLNYqBrY7HGGSHnUgDa7098ZNCTqp/M0SDSeFLblfU44gi2hMpw8gfKPzhVvfn5iJocT5laXkWIB9MUJhTngCbponu1zC0UJqAgiIxfVpOSLrESHNJxbJxIzkSqDudijT8syLuEgPEeg="
  # Generate a string for the upstream branch name
  - UBRANCH=$DISTRO-$TRAVIS_BUILD_NUMBER
  - PHOST="https://dev-$PNAME.gotpantheon.com"
  - PHOST2="https://dev-$PNAME2.gotpantheon.com"
  - DISTRO="10s2cl"
  - UPSTREAM_BUILD_DIR="$DISTRO-drops7"
  - secure: "FJnKApQTXi4ZmbRe5aiB5umOOmCGi5EJpT4f49zC13dQa4/0XcLafQwb/+mhMp5e7hBXFedKkXkzG758dlYh3dWiFdBmJdoD4oQEVd+MNcMn8aLmb7vyPrEsH6DXPrrwOXunLCBRiMQHwPT8hCTTewpLCawFX5B157t0uNcCPg0="
  - secure: "D/vtljoTqcKHmkKFRUuF5dcksmRTl+wkNlNDPASSrzrpsVmYv4ZstX4S0txqtPp2Ul1Xq9v5uX2hDL+0DpMBACNTjnoe2Gh3NbFj6YB+SBke6OyTmjMOAC3WalFRXzQU5Jlz8DoJfPxwEG5aOq9Qi0PrISCyiI9AC3PxrJDtYN4="
  - secure: "DnMnnhaEgxRXw5HsyOc3FbkSUtaJOGchG/WqL1wspae6xy6EoOGC9cvXG+2u82bP9A5FjEypD4SiUVGqo7+8m9WceWJaCPD7Zu0IQrF/AiJT3o2qZVPPSyjzXMbpiQQOIoNRYmkxL+m6RXj+9hTr9kvp1MdRTL4s/UBI3Ho7/wA="
  - secure: "UtvRA4Z4WWj64ZHOcXbEEwCAnT9z/MqJtrXhf5OtQYUTS+g06JRjAOpztk0sCr0eKWwHaWRLyyIUXdzZhEdGWMVfeSGjCa1a4khMqSjzvBZx1DzfMAP5xqF4G8n6LuJntqHa+Ty2rAjaJ9fq/mtM738J1WSR+CEiz5qiguZsSpc="
  - secure: "NkSMxb/CWI4wK8C2KBnuZfMFTlvfKyfF18XBbW0iVAOp3ykHB3NHvV13hANfR+mThG8r0rkX4fpvN+48hL96P7bEF62a2L3/JgUotfxSdUpFDtqmJ7xOkbx4hwkmTVWFxyUzeUDMH0wmuD/Fb1+DJsuebyiwOPbst41CkR6nwWs="
  - secure: "dgS2qOBvsG8JKSuDUG2FFfO//1RAXYNIlWg4umMXIr2CMbFJELPkYwmPqTV7lbsQLJ01CTRaGhNpXQAFB93ox+5h/Cqi7EIqMog47ZyaLlWx4NItRjFJpkFvWd3l/oAXh6wYS/QT7zonx+i/HrCL1TWjLWPnVLv9NZK6mxMg6U4="
  - secure: "IqPU+Ll0o0T20pwgMlhfTi24+Fm5hGWZ4m/8/I4YqCcwmyplNkG+l1C72buUXnqT7u2yTLgADP/qFcWaq3GjzFLo3/lBun191llTxwYxzu/lURlwiVb0+zzb3ZBkh1Kfrt3Ut/VAqvYdGlOc9gWI+hjbiXUozNY4rWdmiaQui60="
  - secure: "FzwlMIM/ieO1SEaPRb2O1N3ToyKWeY2eoVp0u0RwLwtUdnKPx6UdH4QMS9t3ddXjjfs3QYy5EDE9kyp5ENMNEzuepmeFUKjFUBTPpN+Xig/pTzADX67CPwpMDdpdopJqWsQN9XvpCxU8zt20X1WggmINom4HbFjnvV2KJIWkbKA="
  - secure: "APE+hrQBJGHStCTici9rGUOlwYkEBDZJfARdq9bvcC9MWtOYZAX0AphN+hchjS4iqfEVQ/BjeqcP1fHluuMPbs9dsWIoxvh+TLjH0UNm82H9YPt1zNKdawCIga8OLpJSwbjV33rCt7wMH5gPX9oMiGoIb2fxyTchAUo/l5RjD9E="
  - secure: "AVmC8BNFJUPNZosz8inpDPpUfT7cn10zZIqgOggkj5yHph36Kmv0N4sIk1yaFQvHMHteemH2haF083N5Xx3AqDH2tzmTNuwg36mAS+jlvi6JX73ACuYhsiLwnW+YlP6rLh97Ru1wHVe6SaWiy4pG4goaicUKmtNFkcappp091ic="
  - secure: "cDkaqPavH5dvt4Wo5vInAj9RNmzOoxmhq67WMC7WWog6Ds0ICy3vMT0rJKOh/AYujWCGAqOGIdK3EAh7Ny33c5GN9x2trLCGtv2Vnoo7n4H9pj3MIyitAVWX0tRXyY+jZpNqc7LDRGLBDTggqxvpR7AL+H5VxV3aJA7AYGl3dzc="
  - secure: "QuqIfCJ6LxBX3cAMYv6xAoaxUeMJHnaVnEu7D39CFounusCLriEA1Bj5Afb0Mxdkej1Faub08snoEIgjCyiL5UXbKG8A3TpodiNpzHrWe2jMvCiklidOTqH4xojeYjaRhIZJ58bAyd4zk87h3BIDZ8XthMHySs5bkp3nCc4HIfk="
  - secure: "QyUrcGfHpgF4Sg/6jQzYFXQGVmH3pscxm41j30lBCW5WM9IHzzy4R/2m//IviWlBCNqGlvXPfp9vOZSZkhuZnAZdMZft/dRNtHHSssoNiXxjPxHEBSJhGNgBlZdljn039jPaKJEmk58X13zCSuJNod5zgeDVdrHJoD6NLB7juDg="
  - secure: "IdTVUMXlmCNs1lkhvwzjGcFpc+1/1q+NmrdKIeoXwmReSLiHhQx3aD6P8bpyRI9rx6jwg+/E4S1iLTPKIvH6nd8pLGv95w8EDaOsdJKNgaXaIL0jIQeyWNO+aEDnjakGKYitspXUAoSJM/B8ky/Jl82fwmyA37SZntx2ud9Xqaw="
  - secure: "J/SErJGs9UUQhl9xokRIGTzLnNEwT0K+v4hgNk2FcXLMHO1XMiGNNKaLQwsvaLxxPr1MiylVb3Jcl7jHeBgwa+ooUgkqTbMBOFXi6JbPtJt8aeWIV8sePTjCpkaVJZaH2eMQ86LtAKa/jJOiG62OT+97JLkLvqw1EPRQbd2nMCY="
  - secure: "aP8+wB6Aytchp5ygmzMH3vPlfq3hfkV4ne07fxqlhpj4fmBXB/DrKqayjctOweCNs0VtWRWCOD7W8R49WZuDO0Z6S+3LYG8yyMqoeBBAjIty2tT0EGrWBPVEuohp8whk6ytr8dUOUSYEbyGSUKf0LZpYvKe1LszeRpfZWxMlCag="
  - secure: "R6d7fcafLKG/4nqz0MiSZLA+aEBDjwcS340qEsy6bIWDfXMlZroCBDm8Wy3K9jWwArmHiVpxCw6b6LE5OLhniNGGp9Dc+RSG1Rd6yAap6inORoZuxujT//X/5nsYZ7vOWD926QfK3NWPL7Whfh5PrbAy7rqsxDl5RyRdzYYgxSI="
  - secure: "Ty4wJEEI1j0M0oMb8hSL4X/LL4n8t1ewSxT0Fan8jCeOghdNgEiir3/B/+6HaPuZ5OBz42hp2li4w2HU2z8xDCc34Fy46XIFaOQvW2kNKIIjmZa39pgqxFIR5KDAGxiXLIBje6MYrUjf38QYRXm8rFW4kTJBCPhx6Z/b0Z9Y1OM="
  - secure: "P3JZdVs3ixRnUsvkpMbo9F0o8Nc1pWBLDITbzwhPLJ/rX8CXHA2/4BmE+MWxt6AZ/qVEcwoTRGtN9Jxmyl0UGB9CAFoum/Z7EUxdEGcnVT5uLCQKnKGpfIcwhARPU2buExt/x+AJwoqC00/PjbabFci5f+AlVBlSBwQns53gnSQ="
  - secure: "K4F78Cw5IEb0bDKtOyqZ/l9Tp527BD7PyeRmls+tQ5vaQLs/LHQLxp6rNsfElZ2FGrH/ADNUUKqwaLH9BUZojEgfvPU9ZNK0JF3zZqBxbgpm3Rituf7lPgmr/6nprUKuSk+jT/R7DRw32MAxo0aYU+NDcrSDYuP8e3nDVWDC/CA="
  - secure: "F9UAQBx/nZYw+4pG8TBCAV8m+nF5ZCcI9bSo1olJkiYJlThIa2sYrWejplkc6N/D+Z0sv0clBjCePr2GVME9zHoZ0soYTTrhSF6hH2KutJF2eXJLq0SHnDJd7QknItVroEOU0YwJw415232RH+b4EmAjS8G57NZeI1sm3a2PSxM="
  - secure: "RUWQrjUcmblGru/KL2Mh4vtg+55PP21dyauCYuSlEHdfc/VXhkO468JRJeRe9r9MdOqSzKax8M537PaBMdQikDzAZ8FN4MBsC1ydTZJM+kjM+JDwMBc+laVkyVdcnwc6TQvR/IChdeeijZf1ZT44zXNJ41XfH1cpI9Uqt3S1hCw="
  - secure: "E/XE7GetwwKf2R2l1fnSxqnITc0e9CU0iBHltzXyhqEpb9dxFloctXABMo6Je+UZh+xtx/eN+byu7dzbVQQq4179HZvXXNZbJeoi7Kql4l7BhYLYDT5BuoUMtYmZ4iQFJpmrYSbP3yQ1kX3XwDJ/Z2mVr4aFqUvuYRfncNZhMU8="

install:
  # Dynamic hosts through Pantheon mean constantly checking interactively
  # that we mean to connect to an unknown host. We ignore those here.
  - echo "StrictHostKeyChecking no" > ~/.ssh/config

  # Install Drush.
  - composer global require drush/drush:6.2.0
  - export PATH="$HOME/.composer/vendor/bin:$PATH"

  # Install Terminus.
  - git clone https://github.com/pantheon-systems/terminus.git $HOME/.drush/terminus
  - cd $HOME/.drush/terminus
  - composer update --no-dev
  - drush cc drush


  # Install additional test dependencies here (like Casper, Behat, etc).
  # Selenium:
  # - java -jar selenium-server-standalone-2.33.0.jar &
  # //replace with the name of the version you downloaded
  # Behat:
  # - composer global require behat
before_script:
  # Decrypt the encoded private key to the /.ssh directory.
  - echo -n $id_rsa_{00..30} >> ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  # Authenticate with Pantheon via Terminus.
  - drush pauth $PEMAIL --password=$PPASS

  # Build the Upstream repo with drush make.
  - cd $TRAVIS_BUILD_DIR
  - drush make $DISTRO.make ~/$UPSTREAM_BUILD_DIR -y
  - cd ~/$UPSTREAM_BUILD_DIR
  - git config --global user.email "training@getpantheon.com"
  - git config --global user.name "Pantheon Training"
  - git init
  # Add the fresh install Pantheon site a remote and push to it.
  - git remote add pantheon_install ssh://codeserver.dev.$PUUID@codeserver.dev.$PUUID.drush.in:2222/~/repository.git
  - git remote add pantheon_upgrade ssh://codeserver.dev.$PUUID2@codeserver.dev.$PUUID2.drush.in:2222/~/repository.git
  - git add ~/$UPSTREAM_BUILD_DIR
  - git commit -m "Build $PSITE"
  # Add the update test site as a remote and push a branch to it.
  # Ensure the targets are in git mode
  - drush psite-cmode $PUUID dev git
  - drush psite-cmode $PUUID2 dev git
  - git push --force pantheon_install master
  - git push pantheon_upgrade master

  # We cannot be in a Drupal directory to run aliased drush commands.
  - cd $HOME
  # We need to create the settings.php file in order to run drush commands for
  # the fresh installation.
  - drush @pantheon.$PNAME.dev si pantheon --account-pass="admin" --site-name=$DISTRO-Build-Test --site-mail=noreply@getpantheon.com -y
  # When new modules are added to the codebase, updb can sometimes fail (thus
  # causing a failed build) because the system table and modules are out of
  # sync. We get around this by clearing all caches before attempting anything.
  # The "|| true" works around issues where Views and Block conflict during
  # cache clears / block rehashes.
  - drush @pantheon.$PNAME2.dev cc all --strict=0 || true

  # Run all available updates on the upgrade site as if deploying. For now, append the
  # --strict=0 option for Drush 6.x compatibility on Pantheon.
  - drush @pantheon.$PNAME2.dev updb -y --strict=0

  # Enable additional test dependencies here, like SimpleTest.
  - drush @pantheon.$PNAME.$PSITE en simpletest -y --strict=0
  - drush @pantheon.$PNAME2.$PSITE en simpletest -y --strict=0
  - drush @pantheon.$PNAME.$PSITE en drupalextension -y --strict=0
  - drush @pantheon.$PNAME2.$PSITE en drupalextension -y --strict=0

  # If you're using SimpleTest, you'll want to disable verbose logging. This
  # ensures no false build failures from file write errors.
  - drush @pantheon.$PNAME.$PSITE vset -y simpletest_verbose 0 --strict=0
  - drush @pantheon.$PNAME2.$PSITE vset -y simpletest_verbose 0 --strict=0

  # If drush psite-wipe doesn't work, then we need to create a new site each
  # build to avoid manually resetting the site.
  #- drush psite-create @DISTRO-fresh
  #- FRESH_UUID=`drush psite-uuid @DISTRO-fresh | cut -f2 -d' '`


script:
  #
  # This is where you run your tests, be they SimpleTest, Casper, Behat,
  # or otherwise. Here's a SimpleTest example. I've found that drush
  # likes to exit with odd codes if you run multiple classes at once.
  # You may have to run one class at a time.
  #
  #- drush @pantheon.$PNAME.$PSITE test-run MyTestClass --strict=0
  #- drush @pantheon.$PNAME.$PSITE test-run MyTestClass2 --strict=0

after_script:
  # Destroy the Pantheon environment
  #- drush psite-edelete $PUUID $PSITE -y

  # Delete the git branch we created.
  - cd $UPSTREAM_BUILD_DIR;
  - git remote-add upstream git@github.com:pantheon-learning/$DISTRO-drops7.git
  - git push --force upstream $PSITE
notifications:
  email:
    recipients:
    on_success: always
    on_failure: always
